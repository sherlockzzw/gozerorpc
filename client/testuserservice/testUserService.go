// Code generated by goctl. DO NOT EDIT.
// Source: rpcTemplate.proto

package testuserservice

import (
	"context"

	"codeup.aliyun.com/64df1ec7dba61e96ebf612bf/jiandaoshou/rpc-template/pb/rpcTemplate"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserRes               = rpcTemplate.AddUserRes
	AddUserResp              = rpcTemplate.AddUserResp
	DelUserReq               = rpcTemplate.DelUserReq
	DelUserResp              = rpcTemplate.DelUserResp
	GetUserListReq           = rpcTemplate.GetUserListReq
	GetUserListResp          = rpcTemplate.GetUserListResp
	GetUserRes               = rpcTemplate.GetUserRes
	GetUserResp              = rpcTemplate.GetUserResp
	UpdUserReq               = rpcTemplate.UpdUserReq
	UpdUserResp              = rpcTemplate.UpdUserResp
	UserDetailCountReq       = rpcTemplate.UserDetailCountReq
	UserDetailCountResp      = rpcTemplate.UserDetailCountResp
	UserDetailDeleteReq      = rpcTemplate.UserDetailDeleteReq
	UserDetailDeleteResp     = rpcTemplate.UserDetailDeleteResp
	UserDetailInsertReq      = rpcTemplate.UserDetailInsertReq
	UserDetailInsertResp     = rpcTemplate.UserDetailInsertResp
	UserDetailItem           = rpcTemplate.UserDetailItem
	UserDetailListRequest    = rpcTemplate.UserDetailListRequest
	UserDetailListResponse   = rpcTemplate.UserDetailListResponse
	UserDetailUpdateDoc      = rpcTemplate.UserDetailUpdateDoc
	UserDetailUpdateQuery    = rpcTemplate.UserDetailUpdateQuery
	UserDetailUpdateRequest  = rpcTemplate.UserDetailUpdateRequest
	UserDetailUpdateResponse = rpcTemplate.UserDetailUpdateResponse
	UserInfo                 = rpcTemplate.UserInfo

	TestUserService interface {
		GetUserInfo(ctx context.Context, in *GetUserRes, opts ...grpc.CallOption) (*GetUserResp, error)
		AddUser(ctx context.Context, in *AddUserRes, opts ...grpc.CallOption) (*AddUserResp, error)
		GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error)
		UpdUser(ctx context.Context, in *UpdUserReq, opts ...grpc.CallOption) (*UpdUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
	}

	defaultTestUserService struct {
		cli zrpc.Client
	}
)

func NewTestUserService(cli zrpc.Client) TestUserService {
	return &defaultTestUserService{
		cli: cli,
	}
}

func (m *defaultTestUserService) GetUserInfo(ctx context.Context, in *GetUserRes, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := rpcTemplate.NewTestUserServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultTestUserService) AddUser(ctx context.Context, in *AddUserRes, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := rpcTemplate.NewTestUserServiceClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultTestUserService) GetUserList(ctx context.Context, in *GetUserListReq, opts ...grpc.CallOption) (*GetUserListResp, error) {
	client := rpcTemplate.NewTestUserServiceClient(m.cli.Conn())
	return client.GetUserList(ctx, in, opts...)
}

func (m *defaultTestUserService) UpdUser(ctx context.Context, in *UpdUserReq, opts ...grpc.CallOption) (*UpdUserResp, error) {
	client := rpcTemplate.NewTestUserServiceClient(m.cli.Conn())
	return client.UpdUser(ctx, in, opts...)
}

func (m *defaultTestUserService) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := rpcTemplate.NewTestUserServiceClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}
