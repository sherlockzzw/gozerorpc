// Code generated by goctl. DO NOT EDIT.
// Source: rpcTemplate.proto

package userdetailservice

import (
	"context"

	"rpc-template/pb/rpcTemplate"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserDetailDeleteReq      = rpcTemplate.UserDetailDeleteReq
	UserDetailDeleteResp     = rpcTemplate.UserDetailDeleteResp
	UserDetailInsertReq      = rpcTemplate.UserDetailInsertReq
	UserDetailInsertResp     = rpcTemplate.UserDetailInsertResp
	UserDetailItem           = rpcTemplate.UserDetailItem
	UserDetailListRequest    = rpcTemplate.UserDetailListRequest
	UserDetailListResponse   = rpcTemplate.UserDetailListResponse
	UserDetailUpdateDoc      = rpcTemplate.UserDetailUpdateDoc
	UserDetailUpdateQuery    = rpcTemplate.UserDetailUpdateQuery
	UserDetailUpdateRequest  = rpcTemplate.UserDetailUpdateRequest
	UserDetailUpdateResponse = rpcTemplate.UserDetailUpdateResponse

	UserDetailService interface {
		UserDetailList(ctx context.Context, in *UserDetailListRequest, opts ...grpc.CallOption) (*UserDetailListResponse, error)
		UserDetailUpdate(ctx context.Context, in *UserDetailUpdateRequest, opts ...grpc.CallOption) (*UserDetailUpdateResponse, error)
		UserDetailInsert(ctx context.Context, in *UserDetailInsertReq, opts ...grpc.CallOption) (*UserDetailInsertResp, error)
		UserDetailDelete(ctx context.Context, in *UserDetailDeleteReq, opts ...grpc.CallOption) (*UserDetailDeleteResp, error)
	}

	defaultUserDetailService struct {
		cli zrpc.Client
	}
)

func NewUserDetailService(cli zrpc.Client) UserDetailService {
	return &defaultUserDetailService{
		cli: cli,
	}
}

func (m *defaultUserDetailService) UserDetailList(ctx context.Context, in *UserDetailListRequest, opts ...grpc.CallOption) (*UserDetailListResponse, error) {
	client := rpcTemplate.NewUserDetailServiceClient(m.cli.Conn())
	return client.UserDetailList(ctx, in, opts...)
}

func (m *defaultUserDetailService) UserDetailUpdate(ctx context.Context, in *UserDetailUpdateRequest, opts ...grpc.CallOption) (*UserDetailUpdateResponse, error) {
	client := rpcTemplate.NewUserDetailServiceClient(m.cli.Conn())
	return client.UserDetailUpdate(ctx, in, opts...)
}

func (m *defaultUserDetailService) UserDetailInsert(ctx context.Context, in *UserDetailInsertReq, opts ...grpc.CallOption) (*UserDetailInsertResp, error) {
	client := rpcTemplate.NewUserDetailServiceClient(m.cli.Conn())
	return client.UserDetailInsert(ctx, in, opts...)
}

func (m *defaultUserDetailService) UserDetailDelete(ctx context.Context, in *UserDetailDeleteReq, opts ...grpc.CallOption) (*UserDetailDeleteResp, error) {
	client := rpcTemplate.NewUserDetailServiceClient(m.cli.Conn())
	return client.UserDetailDelete(ctx, in, opts...)
}
